<application>
  <component name="AppStorage">
    <histories>
      <item value="NIfTI Image Converter (nii2png) for Python and Matlab Rejoice OpenCV users, a lightweight neuroimaging .nii to .png converter that actually works. Now supports both Python3 and Matlab 2017b! Environment Python 3.7 (or Matlab 2017b) Matlab Usage 1. Add your script to your path. And run it simply by typing this and hitting enter: ``` nii2png ``` 2. Select your working directory. 3. Select your NIfTI image. 4. Rotate your image if you wish: ``` &gt;&gt; Would you like to rotate the orientation? (yn) &gt;&gt; y &gt;&gt; OK. By 90° 180° or 270°? &gt;&gt; 90 ``` 5. Let it run. 6. Your png files are now in the png folder of your working directory. Download nii2png for Matlab 2017b Download Latest Build: [Download](https:raw.githubusercontent.comalexlaurenceNIfTI-Image-Convertermastermatlabnii2png.m) Download Stable Release: [Download](https:github.comalexlaurenceNIfTI-Image-Converterreleases) Python Setup For those without Python, Pip or the modules, simply open Terminal and type in the following commands and hit enter. 1. Install Homebrew ``` usrbinruby -e &quot;(curl -fsSL https:raw.githubusercontent.comHomebrewinstallmasterinstall)&quot; ``` 2. Install Python 3 ``` brew install python3 ``` 3. Install pip ``` sudo easy_install pip ``` 4. Install plugins ``` pip install scipy pip install shutil pip install nibabel pip install numpy pip install imageio ``` Download nii2png for Python You can download the latest version of nii2png through pip. ``` pip install nii2png ``` Or alternatively, download the binary files here. Download Latest Build: [Download](https:raw.githubusercontent.comalexlaurenceNIfTI-Image-Convertermasterpythonnii2png.py) Download Stable Release: [Download](https:github.comalexlaurenceNIfTI-Image-Converterreleases) Permissions If you didn't install nii2png through pip, you may need to grant nii2png.py permission to execute. On unix systems, Python scripts can be made executable using the following process: ``` chmod +x nii2png.py ``` Optional: You can also move `nii2png.py` into your bin directory, and it will be runnable from anywhere. Python Usage 1. Let's run the file and start converting images! Please ensure that your output folder ends with a slash to avoid errors. ``` python3 nii2png.py -i &lt;inputfile&gt; -o &lt;outputfolder&gt; ``` or ``` python3 nii2png.py --input &lt;inputfile&gt; --ouput &lt;outputfolder&gt; ``` Tip: You can drag and drop the filefolder into the terminal window instead of typing the path 2. Rotate the images if you wish ``` Would you like to rotate the orientation? (yn) y OK. By 90° 180° or 270°? 90 ``` Example with change directory command ``` cd ~images python3 nii2png.py -i brain.nii -o png ``` with full paths ``` python3 usersernieimagesnii2png.py -i usersernieimagesbrain.nii -o usersernieimagespng ``` with long options ``` python3 usersernieimagesnii2png.py --input usersernieimagesbrain.nii --output usersernieimagespng ```" />
      <item value="Expired Deprecation Error" />
      <item value="deprecator" />
      <item value="Will raise &lt;class 'nibabel.deprecator.ExpiredDeprecationError'&gt; as of version: 5.0" />
      <item value="raise ValueError(&quot;Supply a single scale, or one value per spatial &quot; ValueError: Supply a single scale, or one value per spatial axis" />
      <item value="ValueError: Supply a single scale, or one value per spatial axis" />
      <item value="FutureWarning: `multichannel` is a deprecated argument name for `rescale`. It will be removed in version 1.0. Please use `channel_axis` instead. yinzi = transform.rescale(img, scale_vector,order=1, mode='constant', cval=0, clip=True," />
      <item value="lower" />
      <item value="TypeError: array() takes from 1 to 2 positional arguments but 12 were given" />
      <item value="TypeError: expected str, bytes or os.PathLike object, not generator" />
      <item value="ValueError: too many values to unpack (expected 2)" />
      <item value="recommend" />
      <item value="tumor(recommended)" />
      <item value="by tumor(recommended)" />
      <item value="Exception thrown in SimpleITK ImageFileReader_Execute" />
      <item value="RuntimeError: Exception thrown in SimpleITK ImageFileReader_Execute: D:\a\1\sitk\Code\IO\src\sitkImageReaderBase.cxx:97:" />
      <item value="TypeError: unsupported operand type(s) for -: 'str' and 'str'" />
      <item value="cannot open output file" />
      <item value="AttributeError: module 'SimpleITK' has no attribute 'GetArrayFromImge'" />
      <item value="RuntimeError: Exception thrown in SimpleITK ImageFileReader_Execute: D:\a\1\sitk\Code\IO\src\sitkImageReaderBase.cxx:97: sitk::ERROR: The file &quot;F:\tiaozhenghou_ceshi\pancreas_001.nii.gz&quot; does not exist." />
      <item value="SyntaxError: invalid character in identifier" />
      <item value="TypeError: nii_to_image() missing 1 required positional argument: 'maskimg_fdata'" />
      <item value="subscriptable" />
      <item value="NoneType' object is not subscriptable" />
      <item value="criterion" />
      <item value="preprocessing procedures" />
      <item value="enumerate" />
      <item value="None Type" />
      <item value="'NoneType' object is not iterable" />
      <item value="January" />
      <item value="segmentation" />
      <item value="biomedical" />
      <item value="Image File Reader" />
      <item value="sitk::ERROR: Unable to determine ImageIO reader for &quot;.raw_datasettrainct\pancreas_001.nii&quot;" />
      <item value="Unable to determine ImageIO reader for &quot;.raw_datasettrainct\pancreas_001.nii&quot;" />
      <item value="Unable to determine ImageIO reader for" />
      <item value="Runtime Error" />
      <item value="RuntimeError: Exception thrown in SimpleITK ImageFileReader_Execute: D:\a\1\sitk\Code\IO\src\sitkImageReaderBase.cxx:105: sitk::ERROR: Unable to determine ImageIO reader for &quot;.raw_datasettrainct\pancreas_001.nii&quot;" />
      <item value="raw dataset" />
      <item value="new_seg.SetDirection(ct.GetDirection()) new_seg.SetOrigin(ct.GetOrigin()) new_seg.SetSpacing((ct.GetSpacing()[0] int(1 self.xy_down_scale), ct.GetSpacing()[1] int(1 self.xy_down_scale), self.slice_down_scale)) return new_ct, new_seg" />
      <item value="fixed path" />
      <item value="replace" />
      <item value="shape" />
      <item value="slice" />
      <item value="ndimage" />
      <item value="valid rate" />
      <item value="exists" />
      <item value="expand slice" />
      <item value="classes" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="45" />
        <entry key="ENGLISH" value="43" />
        <entry key="ROMANIAN" value="1" />
        <entry key="HINDI" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1668408246923" />
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20200305000393002" />
      </app-key>
    </option>
    <option name="translateDocumentation" value="true" />
    <option name="translator" value="YOUDAO" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="702e8bcf19a93b80" />
      </youdao-translate>
    </option>
  </component>
</application>